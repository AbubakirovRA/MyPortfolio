/*
 * Vacuum Cleaner Cloud Service
 * This is a sample Vacuum Cleaner Cloud Service server. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: vacuumcleaner@vacuumcleaner.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ModelApiResponse;
import io.swagger.client.model.Vacuumcleaner;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for VacuumcleanerApi
 */
@Ignore
public class VacuumcleanerApiTest {

    private final VacuumcleanerApi api = new VacuumcleanerApi();

    /**
     * Add a new vacuumcleaner to the store
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addvacuumcleanerTest() throws Exception {
        Vacuumcleaner body = null;
        api.addvacuumcleaner(body);

        // TODO: test validations
    }
    /**
     * Deletes a vacuumcleaner
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deletevacuumcleanerTest() throws Exception {
        Long vacuumcleanerId = null;
        String apiKey = null;
        api.deletevacuumcleaner(vacuumcleanerId, apiKey);

        // TODO: test validations
    }
    /**
     * Finds vacuumcleaners by status
     *
     * Multiple status values can be provided with comma separated strings
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findvacuumcleanersByStatusTest() throws Exception {
        List<String> status = null;
        List<Vacuumcleaner> response = api.findvacuumcleanersByStatus(status);

        // TODO: test validations
    }
    /**
     * Finds vacuumcleaners by tags
     *
     * Muliple tags can be provided with comma separated strings. Use\\ \\ tag1, tag2, tag3 for testing.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void findvacuumcleanersByTagsTest() throws Exception {
        List<String> tags = null;
        List<Vacuumcleaner> response = api.findvacuumcleanersByTags(tags);

        // TODO: test validations
    }
    /**
     * Find vacuumcleaner by ID
     *
     * Returns a single vacuumcleaner
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getvacuumcleanerByIdTest() throws Exception {
        Long vacuumcleanerId = null;
        Vacuumcleaner response = api.getvacuumcleanerById(vacuumcleanerId);

        // TODO: test validations
    }
    /**
     * Update an existing vacuumcleaner
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updatevacuumcleanerTest() throws Exception {
        Vacuumcleaner body = null;
        api.updatevacuumcleaner(body);

        // TODO: test validations
    }
    /**
     * Updates a vacuumcleaner in the store with form data
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updatevacuumcleanerWithFormTest() throws Exception {
        Long vacuumcleanerId = null;
        String name = null;
        String status = null;
        api.updatevacuumcleanerWithForm(vacuumcleanerId, name, status);

        // TODO: test validations
    }
    /**
     * uploads an image
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void uploadFileTest() throws Exception {
        Long vacuumcleanerId = null;
        Object body = null;
        ModelApiResponse response = api.uploadFile(vacuumcleanerId, body);

        // TODO: test validations
    }
}
