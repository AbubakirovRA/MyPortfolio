/*
 * Vacuum Cleaner Cloud Service
 * This is a sample Vacuum Cleaner Cloud Service server. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: vacuumcleaner@vacuumcleaner.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Programma
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-18T23:48:47.389Z[GMT]")
public class Programma {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("vacuumcleanerId")
  private Long vacuumcleanerId = null;

  @SerializedName("quantity")
  private Integer quantity = null;

  @SerializedName("shipDate")
  private OffsetDateTime shipDate = null;

  /**
   * programma Status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PLACED("placed"),
    APPROVED("approved"),
    DELIVERED("delivered");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("complete")
  private Boolean complete = false;

  public Programma id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Programma vacuumcleanerId(Long vacuumcleanerId) {
    this.vacuumcleanerId = vacuumcleanerId;
    return this;
  }

   /**
   * Get vacuumcleanerId
   * @return vacuumcleanerId
  **/
  @Schema(description = "")
  public Long getVacuumcleanerId() {
    return vacuumcleanerId;
  }

  public void setVacuumcleanerId(Long vacuumcleanerId) {
    this.vacuumcleanerId = vacuumcleanerId;
  }

  public Programma quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(description = "")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public Programma shipDate(OffsetDateTime shipDate) {
    this.shipDate = shipDate;
    return this;
  }

   /**
   * Get shipDate
   * @return shipDate
  **/
  @Schema(description = "")
  public OffsetDateTime getShipDate() {
    return shipDate;
  }

  public void setShipDate(OffsetDateTime shipDate) {
    this.shipDate = shipDate;
  }

  public Programma status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * programma Status
   * @return status
  **/
  @Schema(description = "programma Status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Programma complete(Boolean complete) {
    this.complete = complete;
    return this;
  }

   /**
   * Get complete
   * @return complete
  **/
  @Schema(description = "")
  public Boolean isComplete() {
    return complete;
  }

  public void setComplete(Boolean complete) {
    this.complete = complete;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Programma programma = (Programma) o;
    return Objects.equals(this.id, programma.id) &&
        Objects.equals(this.vacuumcleanerId, programma.vacuumcleanerId) &&
        Objects.equals(this.quantity, programma.quantity) &&
        Objects.equals(this.shipDate, programma.shipDate) &&
        Objects.equals(this.status, programma.status) &&
        Objects.equals(this.complete, programma.complete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, vacuumcleanerId, quantity, shipDate, status, complete);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Programma {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    vacuumcleanerId: ").append(toIndentedString(vacuumcleanerId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
